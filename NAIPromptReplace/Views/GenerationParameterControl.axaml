<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:NAIPromptReplace.ViewModels"
             xmlns:controls="clr-namespace:NAIPromptReplace.Controls"
             xmlns:converters="clr-namespace:NAIPromptReplace.Converters"
             xmlns:models="clr-namespace:NAIPromptReplace.Models"
             xmlns:dialogHostAvalonia="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
             mc:Ignorable="d" d:DesignWidth="1050" d:DesignHeight="650"
             x:Class="NAIPromptReplace.Views.GenerationParameterControl"
             x:DataType="vm:GenerationParameterControlViewModel">
    <Design.DataContext>
        <vm:GenerationParameterControlViewModel />
    </Design.DataContext>
    <UserControl.Resources>
        <converters:TextToTokenCountConverter x:Key="TextToTokenCountConverter" />
        <converters:AnlasCountConverter x:Key="AnlasCountConverter" />
    </UserControl.Resources>
    <TabControl>
        <TabControl.Items>
            <TabItem Header="Prompt">
                <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,*" ColumnDefinitions="*" Margin="10">
                    <Grid RowDefinitions="Auto,*,*,*,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Prompt" />
                        <TextBox Grid.Row="0" Grid.Column="1" Height="100" Margin="0,0,0,5" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding GenerationConfig.Prompt, TargetNullValue=''}" />
                        <ProgressBar Grid.Row="1" Grid.Column="1" Margin="0,0,0,5" Maximum="225" VerticalAlignment="Stretch" ShowProgressText="True" ProgressTextFormat="{}{0}/{3} Tokens Used">
                            <ProgressBar.Value>
                                <MultiBinding Converter="{StaticResource TextToTokenCountConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="GenerationConfig.Prompt" />
                                        <Binding Path="GenerationConfig.Replacements" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </ProgressBar.Value>
                        </ProgressBar>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Negative" Margin="0,0,5,0" />
                        <TextBox Grid.Row="2" Grid.Column="1" Height="100" Margin="0,0,0,5" TextWrapping="Wrap" Text="{Binding GenerationConfig.GenerationParameter.NegativePrompt, TargetNullValue=''}" />
                        <ProgressBar Grid.Row="3" Grid.Column="1" Margin="0,0,0,5" Maximum="225" VerticalAlignment="Stretch" ShowProgressText="True" ProgressTextFormat="{}{0}/{3} Tokens Used">
                            <ProgressBar.Value>
                                <MultiBinding Converter="{StaticResource TextToTokenCountConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="GenerationConfig.GenerationParameter.NegativePrompt" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </ProgressBar.Value>
                        </ProgressBar>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Replace" />
                        <TextBox Grid.Row="4" Grid.Column="1" Height="100" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding GenerationConfig.Replace, TargetNullValue=''}" />
                    </Grid>
                    <Grid Grid.Row="5" Grid.Column="0" RowDefinitions="*,Auto" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,5">
                        <ItemsControl ItemsSource="{Binding GenerationLogs}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel>
                                        <WrapPanel.Styles>
                                            <Style Selector="WrapPanel > :is(Control)">
                                                <Setter Property="Margin" Value="0,0,5,5" />
                                            </Style>
                                        </WrapPanel.Styles>
                                    </WrapPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="vm:GenerationLogViewModel">
                                    <Grid Background="Gainsboro" ColumnDefinitions="Auto,*" MaxWidth="520">
                                        <Image MaxHeight="250" MaxWidth="300" Stretch="Uniform" Source="{Binding GenerationLog.Thumbnail}" Margin="0,0,5,5" />
                                        <StackPanel Grid.Column="1" Spacing="5">
                                            <ScrollViewer MaxHeight="300">
                                                <SelectableTextBlock ScrollViewer.HorizontalScrollBarVisibility="Auto" Text="{Binding GenerationLog.Text}" TextWrapping="Wrap" Margin="0,0,0,5" />
                                            </ScrollViewer>
                                            <StackPanel Orientation="Horizontal" Spacing="5">
                                                <SplitButton Content="Save Copy" Command="{Binding SaveImageCommand}" Margin="0,0,0,5">
                                                    <SplitButton.CommandParameter>
                                                        <x:Boolean>False</x:Boolean>
                                                    </SplitButton.CommandParameter>
                                                    <SplitButton.Flyout>
                                                        <MenuFlyout Placement="Bottom">
                                                            <MenuItem Header="Save Original" Command="{Binding SaveImageCommand}">
                                                                <MenuItem.CommandParameter>
                                                                    <x:Boolean>True</x:Boolean>
                                                                </MenuItem.CommandParameter>
                                                            </MenuItem>
                                                            <MenuItem Header="Delete File" Command="{Binding DeleteImageCommand}" CommandParameter="{Binding}" />
                                                        </MenuFlyout>
                                                    </SplitButton.Flyout>
                                                </SplitButton>
                                                <Button Content="Details" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialogHostAvalonia:DialogHost}, Path=OpenDialogCommand}" CommandParameter="{Binding}" Margin="0,0,0,5" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Settings">
                <Grid RowDefinitions="Auto,Auto,Auto" Margin="0,5">
                    <WrapPanel Margin="0,5">
                        <WrapPanel.Styles>
                            <Style Selector="WrapPanel > StackPanel">
                                <Setter Property="Spacing" Value="5" />
                            </Style>
                            <Style Selector="WrapPanel > :is(Control)">
                                <Setter Property="Margin" Value="0,0,5,5" />
                            </Style>
                        </WrapPanel.Styles>
                        <CheckBox Content="SMEA" IsChecked="{Binding GenerationConfig.GenerationParameter.Smea}" IsEnabled="{Binding GenerationConfig.GenerationParameter.Sampler.AllowSmea}" />
                        <CheckBox Content="DYN" IsChecked="{Binding GenerationConfig.GenerationParameter.Dyn}" IsEnabled="{Binding GenerationConfig.GenerationParameter.Sampler.AllowSmea}" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Width" />
                            <NumericUpDown ValueChanged="preventNullValue" FormatString="0" Value="{Binding GenerationConfig.GenerationParameter.Width}" Increment="2" Minimum="1" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Height" />
                            <NumericUpDown ValueChanged="preventNullValue" FormatString="0" Value="{Binding GenerationConfig.GenerationParameter.Height}" Increment="2" Minimum="1" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Seed" />
                            <NumericUpDown FormatString="0" Minimum="0" Value="{Binding GenerationConfig.GenerationParameter.Seed}" HorizontalContentAlignment="Center" MinWidth="150" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Steps" />
                            <NumericUpDown FormatString="0" Minimum="0" Value="{Binding GenerationConfig.GenerationParameter.Steps}" HorizontalContentAlignment="Center" MinWidth="150" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Sampler" />
                            <ComboBox ItemsSource="{Binding GenerationConfig.Model.Samplers}" SelectedItem="{Binding GenerationConfig.GenerationParameter.Sampler}" DisplayMemberBinding="{Binding Name, DataType='models:SamplerInfo'}" MinWidth="150" HorizontalContentAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Model" />
                            <ComboBox ItemsSource="{x:Static models:GenerationModelInfo.Models}" DisplayMemberBinding="{Binding Name, DataType='models:GenerationModelInfo'}" SelectedItem="{Binding GenerationConfig.Model}" MinWidth="120" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Prompt Guidance" />
                            <NumericUpDown ValueChanged="preventNullValue" Value="{Binding GenerationConfig.GenerationParameter.Scale}" Increment="0.1" Minimum="0" Maximum="10" />
                        </StackPanel>
                        <CheckBox Content="Variety+" IsChecked="{Binding GenerationConfig.VarietyAdd}" />
                        <CheckBox Content="Decrisp" IsChecked="{Binding GenerationConfig.GenerationParameter.DynamicThresholding}" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Prompt Guidance Rescale" />
                            <NumericUpDown ValueChanged="preventNullValue" Minimum="0" Maximum="1" FormatString="0.##" Increment="0.01" Value="{Binding GenerationConfig.GenerationParameter.CfgRescale}" MinWidth="130" HorizontalContentAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Noise Schedule" />
                            <ComboBox ItemsSource="{x:Static models:GenerationModelInfo.Schedulers}" SelectedItem="{Binding GenerationConfig.GenerationParameter.NoiseSchedule}" MinWidth="100" HorizontalContentAlignment="Center" HorizontalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Batch Size" />
                            <NumericUpDown ValueChanged="preventNullValue" FormatString="0" Value="{Binding GenerationConfig.BatchSize}" Minimum="1" MinWidth="130" HorizontalContentAlignment="Center" />
                        </StackPanel>
                        <CheckBox Content="Random All Batch Seeds" IsChecked="{Binding GenerationConfig.AllRandom}" />
                        <CheckBox Content="Fixed Batch Seeds" IsChecked="{Binding GenerationConfig.FixedSeed}" />
                        <CheckBox Content="Retry non-free tasks" IsChecked="{Binding GenerationConfig.RetryAll}" />
                        <CheckBox Content="Save No Metadata copy" IsChecked="{Binding GenerationConfig.SaveJpeg}" />
                        <controls:AnlasDisplay Value="{Binding AnlasCost, Converter={StaticResource AnlasCountConverter}}" Height="20" />
                    </WrapPanel>
                    <Expander Grid.Row="1" Header="Hidden Flags" IsExpanded="True" HorizontalAlignment="Stretch" Margin="0,5">
                        <Expander.Content>
                             <WrapPanel>
                                 <WrapPanel.Styles>
                                     <Style Selector="WrapPanel > StackPanel">
                                         <Setter Property="Spacing" Value="5" />
                                     </Style>
                                     <Style Selector="WrapPanel > :is(Control)">
                                         <Setter Property="Margin" Value="0,0,5,5" />
                                     </Style>
                                 </WrapPanel.Styles>
                                 <CheckBox Content="Legacy V3 Extend" IsChecked="{Binding GenerationConfig.GenerationParameter.LegacyV3Extend}" />
                                 <CheckBox Content="Deliberate Euler Ancestral Bug" IsThreeState="True" IsChecked="{Binding GenerationConfig.GenerationParameter.DeliberateEulerAncestralBug}" />
                                 <CheckBox Content="Prefer Brownian" IsThreeState="True" IsChecked="{Binding GenerationConfig.GenerationParameter.PreferBrownian}" />
                                 <StackPanel Orientation="Horizontal">
                                     <TextBlock Text="Skip Cfg Above Sigma" />
                                     <NumericUpDown Value="{Binding GenerationConfig.GenerationParameter.SkipCfgAboveSigma}" HorizontalContentAlignment="Center" />
                                 </StackPanel>
                             </WrapPanel>
                        </Expander.Content>
                    </Expander>
                    <Grid Grid.Row="2" RowDefinitions="*,*,*" ColumnDefinitions="Auto,*">
                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,5,0" Text="Output Path" />
                        <DockPanel Grid.Row="0" Grid.Column="1" Margin="0,0,0,5">
                            <Button DockPanel.Dock="Right" Content="Open" Command="{Binding OpenOutputFolderCommand}" />
                            <Button DockPanel.Dock="Right" Content="Browse" Command="{Binding BrowseOutputFolderCommand}" />
                            <TextBox Margin="0,0,5,0" Text="{Binding  GenerationConfig.OutputPath}" IsReadOnly="{Binding DisableInputFolder}" />
                        </DockPanel>
                        <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,0,5,0" Text="Output File Name" />
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding  GenerationConfig.OutputFilename}" />
                        <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Content="Save Config" Command="{Binding SaveCommand}" HorizontalAlignment="Center" Margin="0,5" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Reference Images">
                <StackPanel Orientation="Vertical" Margin="0,5" Spacing="5">
                    <ContentControl Content="{Binding Img2ImgViewModel}">
                        <ContentControl.ContentTemplate>
                            <DataTemplate DataType="vm:ReferenceImageViewModel">
                                <controls:ReferenceImageExpander DragDrop.AllowDrop="True" ExpanderName="{Binding ExpanderText}" Content="{Binding Content}"
                                                                 Image="{Binding Image}" ImagePath="{Binding ImagePathText}"
                                                                 BrowseCommand="{Binding BrowseCommand}" RemoveCommand="{Binding RemoveCommand}" />
                            </DataTemplate>
                        </ContentControl.ContentTemplate>
                    </ContentControl>
                    <ItemsControl ItemsSource="{Binding VibeTransferViewModels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" Spacing="5" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.DataTemplates>
                            <DataTemplate DataType="vm:ReferenceImageViewModel">
                                <controls:ReferenceImageExpander DragDrop.AllowDrop="True" ExpanderName="{Binding ExpanderText}" Content="{Binding Content}"
                                                                 Image="{Binding Image}" ImagePath="{Binding ImagePathText}"
                                                                 BrowseCommand="{Binding BrowseCommand}" RemoveCommand="{Binding RemoveCommand}" />
                            </DataTemplate>
                        </ItemsControl.DataTemplates>
                    </ItemsControl>
                    <Button Margin="0,0,5,5" Content="Add Vibe Transfer" Command="{Binding AddVibeTransferCommand}" />
                </StackPanel>
            </TabItem>
        </TabControl.Items>
    </TabControl>
</UserControl>